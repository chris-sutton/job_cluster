
                        Advanced Operating Systems
                                 Project 4
                                 Fall 2020


turnin id:  aos_p4


Write a program that reads a host file named HOSTS and a set of commands
from a file named CMDS.  Each command should be run on an available host
from the set.  When one command completes, a new command (if present) 
should be run on that host, until all commands have been run.


fork() and exec() may be useful for executing ssh to run each job.
select() may prove useful in detecting when an output stream closes.


The hosts file might include any of these hosts for testing:

c00
c01
c02
etc from cluster


Here is one example of a CMDS file:

/bin/echo v1 11
/bin/echo v2 22
/bin/echo v3 33
/bin/echo v4 44
/bin/echo v5 55

The output of each command should be displayed to the user unless
re-directed as in the next example.

Here is a second example of a CMDS file:

(echo "job1"; echo `date`; sleep 1; echo `date`) > OUTPUT/file1
(echo "job2"; echo `date`; sleep 2; echo `date`) > OUTPUT/file2
(echo "job3"; echo `date`; sleep 3; echo `date`) > OUTPUT/file3
(echo "job4"; echo `date`; sleep 4; echo `date`) > OUTPUT/file4
(echo "job5"; echo `date`; sleep 5; echo `date`) > OUTPUT/file5
(echo "job6"; echo `date`; sleep 6; echo `date`) > OUTPUT/file6
(echo "job7"; echo `date`; sleep 7; echo `date`) > OUTPUT/file7
(echo "job8"; echo `date`; sleep 8; echo `date`) > OUTPUT/file8
(echo "job9"; echo `date`; sleep 9; echo `date`) > OUTPUT/file9

NOTE that the second example assumes the presence of a subdirectory named OUTPUT.


Submitting the project for grading:

The project should compile and link as p4.

You should turnin a tar file containing all of the required files.

To build the project, I will cd to my directory containing your files
and simply type:

    rm -rf p4
    rm -f *.o
    make
